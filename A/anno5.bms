# Anno 2070
# script for QuickBMS http://quickbms.aluigi.org

# Crypt "34AT9fdY33uT16m7" is used for signature
# the algorithm is simply srand(666666) ^ 16bit
set MEMORY_FILE2 binary "\x55\x89\xe5\x56\x8b\x75\x10\x53\x8b\x55\x08\x8b\x4d\x0c\xd1\xee\x74\x23\x31\xc0\x69\xd2\xfd\x43\x03\x00\x81\xc2\xc3\x9e\x26\x00\x89\xd3\xc1\xeb\x10\x66\x81\xe3\xff\x7f\x66\x31\x1c\x41\x83\xc0\x01\x39\xc6\x77\xdf\x5b\x5e\x5d\xc3"

getdstring SIGN 32
set SIGN unicode SIGN
string SIGN -= -13
if SIGN != "Resource File"
    cleanexit
endif

get FULLSIZE asize
for NEXT = 0x404 < FULLSIZE
    goto NEXT
    math OFFSET = NEXT
    get TYPE long
    get FILES long
    get ZSIZE long
    get SIZE long
    get NEXT long
    math OFFSET -= ZSIZE

    # type & 4 uses a compressed container
    # instead of single compressed files

    if SIZE != 0
        if TYPE & 4
            math OFFSET -= 8
        endif
        log MEMORY_FILE OFFSET ZSIZE
        if TYPE & 2
            calldll MEMORY_FILE2 0 cdecl "" 666666 MEMORY_FILE ZSIZE
        endif
        if TYPE & 1
            clog MEMORY_FILE 0 ZSIZE SIZE MEMORY_FILE
        endif

        if TYPE & 4
            math TMP = OFFSET
            math TMP += ZSIZE
            goto TMP
            get ZSIZE long
            get SIZE long
            math OFFSET -= ZSIZE
            log MEMORY_FILE4 OFFSET ZSIZE
            if TYPE & 2
                calldll MEMORY_FILE2 0 cdecl "" 666666 MEMORY_FILE4 ZSIZE
            endif
            if TYPE & 1
                clog MEMORY_FILE4 0 ZSIZE SIZE MEMORY_FILE4
            endif
        endif

        for i = 0 < FILES
            getdstring NAME 0x208 MEMORY_FILE
            set NAME unicode NAME
            get OFFSET long MEMORY_FILE
            get ZSIZE long MEMORY_FILE
            get SIZE long MEMORY_FILE
            get CRC long MEMORY_FILE
            get ZERO long MEMORY_FILE
            if TYPE & 4
                log MEMORY_FILE3 OFFSET ZSIZE MEMORY_FILE4
            else
                log MEMORY_FILE3 OFFSET ZSIZE
                if TYPE & 2
                    calldll MEMORY_FILE2 0 cdecl "" 666666 MEMORY_FILE3 ZSIZE
                endif
                if TYPE & 1
                    clog MEMORY_FILE3 0 ZSIZE SIZE MEMORY_FILE3
                endif
            endif
            log NAME 0 SIZE MEMORY_FILE3
        next i
    endif
next
